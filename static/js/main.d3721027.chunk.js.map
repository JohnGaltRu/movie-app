{"version":3,"sources":["../public/images/IMDB.svg","../public/images/React.svg","../public/images/TheMovieDB.svg","components/NavBar/NavBar.jsx","../config.js","components/Main/SearchBar/SearchBar.jsx","redux/actions/actionCreator.js","components/Main/MoviesContainer/MoviesContainer.jsx","components/ModalMovieContainer/ModalMovieContainer.jsx","components/ModalMovieContainer/PortalForModal.jsx","App.js","serviceWorker.js","redux/store.js","redux/reducers/searchValue.js","redux/reducers/searchFilmDetails.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","src","ReactSVG","width","alt","TheMovieDB","IMDB","apiURL","apiKey","SearchBar","state","searchValue","moviesList","burgerMenuBtnClassList","burgerMenuListClassList","input","this","setState","props","moviesListAction","concat","e","charCode","submitSearch","enterPressHandler","bind","document","body","addEventListener","_this2","type","placeholder","onChange","handleSearchInput","target","value","onClick","burgerMenuClassListToggle","showCollection","Component","connect","movies","searchingFilmCollectionLink","MoviesContainer","fetch","then","res","json","results","catch","error","console","log","message","_this3","length","showFilmDetailsAction","name","_this4","map","movie","index","key","poster_path","id","showModalWindow","original_title","vote_average","searchingFilmLink","ModalMovieContainer","escapePressHandler","getElementById","style","position","genreArr","genres","i","push","join","removeChild","querySelector","hideFilmDetailsAction","keyCode","hideModalWindow","Fragment","title","overview","genreConcat","release_date","budget","rel","href","imdb_id","PortalForModalMovieContainer","el","appendChild","ReactDOM","createPortal","children","App","NavBar_NavBar","Main_SearchBar_SearchBar","Main_MoviesContainer_MoviesContainer","PortalForModal_PortalForModalMovieContainer","components_ModalMovieContainer_ModalMovieContainer","Boolean","window","location","hostname","match","preloadedState","arguments","undefined","_ref","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3721027.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMDB.8ba3391e.svg\";","module.exports = __webpack_public_path__ + \"static/media/React.9a28da9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/TheMovieDB.02a9430b.svg\";","import React from \"react\";\nimport \"./NavBar.css\";\nimport ReactSVG from \".../../../public/images/React.svg\";\nimport TheMovieDB from \".../../../public/images/TheMovieDB.svg\";\nimport IMDB from \".../../../public/images/IMDB.svg\";\n\nexport default function NavBar() {\n  return (\n    <div className=\"nav-container\">\n      <img src={ReactSVG} width=\"70px\" alt=\"React\" />\n      <img src={TheMovieDB} width=\"70px\" alt=\"TheMovieDB\" />\n      <img src={IMDB} width=\"70px\" alt=\"IMDB\" />\n    </div>\n  );\n}\n","var apiURL = \"https://api.themoviedb.org/3\";\nvar apiKey = \"?api_key=2973b5ea282e5fd4b5f250885f41a7a3\";\nexport { apiURL, apiKey };","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\nimport { apiURL, apiKey } from \".../../../config.js\";\nimport { connect } from \"react-redux\";\nimport { moviesListAction } from \"./../../../redux/actions/actionCreator.js\";\n\nclass SearchBar extends Component {\n  state = {\n    searchValue: \"\",\n    moviesList: [],\n    burgerMenuBtnClassList: \"burgerMenu\",\n    burgerMenuListClassList: \"burgerMenuList\"\n  };\n\n  handleSearchInput(input) {\n    this.setState({ searchValue: input });\n  }\n\n  submitSearch(searchValue) {\n    if (searchValue) {\n      this.props.moviesListAction(\n        `${apiURL}/search/movie${apiKey}&language=en-US&page=1&include_adult=false&query=${searchValue}`\n      );\n    }\n  }\n\n  showCollection(searchValue) {\n    this.props.moviesListAction(`${apiURL}/movie/${searchValue}${apiKey}`);\n  }\n\n  burgerMenuClassListToggle() {\n    this.state.burgerMenuBtnClassList === \"burgerMenu\"\n      ? this.setState({ burgerMenuBtnClassList: \"burgerMenu open\" })\n      : this.setState({ burgerMenuBtnClassList: \"burgerMenu\" });\n    this.state.burgerMenuListClassList === \"burgerMenuList\"\n      ? this.setState({ burgerMenuListClassList: \"burgerMenuList open\" })\n      : this.setState({ burgerMenuListClassList: \"burgerMenuList\" });\n  }\n\n  enterPressHandler(e) {\n    if (e.charCode === 13 && this.state.searchValue) {\n      this.submitSearch(this.state.searchValue);\n    }\n  }\n\n  componentDidMount() {\n    this.enterPressHandler = this.enterPressHandler.bind(this);\n    document.body.addEventListener(\"keypress\", this.enterPressHandler);\n  }\n\n  render() {\n    return (\n      <div className=\"search-container\">\n        <h1 className=\"search-title\">THE MOVIE DB</h1>\n        <div className=\"searchbar-container\">\n          <input\n            className=\"searchbar\"\n            type=\"text\"\n            placeholder=\"Search films or tv series ...\"\n            onChange={e => this.handleSearchInput(e.target.value)}\n          ></input>\n          <button\n            className=\"btn search-btn\"\n            onClick={() => {\n              this.submitSearch(this.state.searchValue);\n            }}\n          >\n            SEARCH\n          </button>\n          <div\n            className={this.state.burgerMenuBtnClassList}\n            onClick={() => {\n              this.burgerMenuClassListToggle();\n            }}\n          >\n            <span className=\"burger-line\"></span>\n            <span className=\"burger-line\"></span>\n            <span className=\"burger-line\"></span>\n          </div>\n        </div>\n        <div className=\"searchMenu-container\">\n          <button\n            className=\"btn searchMenu-btn\"\n            onClick={() => {\n              this.showCollection(\"now_playing\");\n            }}\n          >\n            Now playing\n          </button>\n          <button\n            className=\"btn searchMenu-btn\"\n            onClick={() => {\n              this.showCollection(\"popular\");\n            }}\n          >\n            Popular\n          </button>\n          <button\n            className=\"btn searchMenu-btn\"\n            onClick={() => {\n              this.showCollection(\"upcoming\");\n            }}\n          >\n            Upcoming\n          </button>\n          <button\n            className=\"btn searchMenu-btn\"\n            onClick={() => {\n              this.showCollection(\"top_rated\");\n            }}\n          >\n            Top rated\n          </button>\n        </div>\n        <div\n          className={this.state.burgerMenuListClassList}\n          onClick={() => {\n            this.burgerMenuClassListToggle();\n          }}\n        >\n          <ul>\n            <li\n              onClick={() => {\n                this.showCollection(\"now_playing\");\n              }}\n            >\n              Now playing\n            </li>\n            <li\n              onClick={() => {\n                this.showCollection(\"popular\");\n              }}\n            >\n              Popular\n            </li>\n            <li\n              onClick={() => {\n                this.showCollection(\"upcoming\");\n              }}\n            >\n              Upcoming\n            </li>\n            <li\n              onClick={() => {\n                this.showCollection(\"top_rated\");\n              }}\n            >\n              Top rated\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({ movies: state.movies }),\n  { moviesListAction }\n)(SearchBar);\n","export const moviesListAction = searchValue => ({\r\n  type: \"SEARCH_FILM_COLLECTION\",\r\n  searchingFilmCollectionLink: searchValue\r\n});\r\n\r\nexport const showFilmDetailsAction = searchValue => ({\r\n  type: \"SEARCH_FILM_DETAILS\",\r\n  searchingFilmLink: searchValue\r\n});\r\n\r\nexport const hideFilmDetailsAction = searchValue => ({\r\n  type: \"HIDE_FILM_DETAILS\",\r\n  searchingFilmLink: \"\"\r\n});\r\n","import React, { Component } from \"react\";\nimport { apiURL, apiKey } from \".../../../config.js\";\nimport \"./MoviesContainer.css\";\nimport { connect } from \"react-redux\";\nimport { showFilmDetailsAction } from \"./../../../redux/actions/actionCreator.js\";\n\nclass MoviesContainer extends Component {\n  state = {\n    searchValue: \"\",\n    moviesList: []\n  };\n\n  componentDidMount() {\n    fetch(`${apiURL}/movie/popular${apiKey}`)\n      .then(res => res.json())\n      .then(res => this.setState({ moviesList: res.results }))\n      .catch(error => console.log(error.message));\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.searchValue.length > 0 &&\n      this.props.searchValue !== this.state.searchValue\n    ) {\n      this.setState({ searchValue: this.props.searchValue });\n      fetch(this.props.searchValue)\n        .then(res => res.json())\n        .then(res => {\n          this.setState({ moviesList: res.results });\n        })\n        .catch(error => console.log(error.message));\n    }\n  }\n\n  showModalWindow(target) {\n    this.props.showFilmDetailsAction(\n      `${apiURL}/movie/${target.name}${apiKey}&append_to_response=videos,images`\n    );\n  }\n\n  render() {\n    const imgURL = \"http://image.tmdb.org/t/p/w500\";\n    const movies = this.state.moviesList.map((movie, index) => {\n      return (\n        <div key={index} className=\"movie-card\">\n          <div>\n            <img\n              width=\"100%\"\n              src={imgURL + movie.poster_path}\n              name={movie.id}\n              onClick={e => this.showModalWindow(e.target)}\n              alt=\"movie poster\"\n              className=\"moviePoster\"\n            ></img>\n          </div>\n          <div className=\"titleAndRatingContainer\">\n            <div>\n              <h3>{movie.original_title}</h3>\n            </div>\n            <div className=\"RatingContainer\">\n              <p>Rating: {movie.vote_average}/10</p>\n              <button\n                type=\"button\"\n                className=\"showDetailsBtn\"\n                name={movie.id}\n                onClick={e => this.showModalWindow(e.target)}\n              >\n                Show details\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return <div className=\"movies-container-main\">{movies}</div>;\n  }\n}\n\nexport default connect(\n  state => ({ searchValue: state.searchValue }),\n  { showFilmDetailsAction }\n)(MoviesContainer);\n","import \"./ModalMovieContainer.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport IMDB from \".../../../public/images/IMDB.svg\";\r\nimport { hideFilmDetailsAction } from \"./../../redux/actions/actionCreator.js\";\r\n\r\nclass ModalMovieContainer extends Component {\r\n  state = {\r\n    movie: \"\",\r\n    searchingFilmLink: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.escapePressHandler = this.escapePressHandler.bind(this);\r\n    document.body.addEventListener(\"keydown\", this.escapePressHandler);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.props.searchingFilmLink.length > 0 &&\r\n      this.props.searchingFilmLink !== this.state.searchingFilmLink\r\n    ) {\r\n      this.setState({ searchingFilmLink: this.props.searchingFilmLink });\r\n      document.getElementById(\"root\").style.position = \"fixed\";\r\n      fetch(this.props.searchingFilmLink)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.setState({ movie: res });\r\n        })\r\n        .catch(error => console.log(error.message));\r\n    } else {\r\n      document.getElementById(\"root\").style.position = \"\";\r\n    }\r\n  }\r\n\r\n  genreConcat() {\r\n    let genreArr = [];\r\n    this.state.movie.genres.map(i => {\r\n      genreArr.push(i.name);\r\n    });\r\n    return genreArr.join(\", \");\r\n  }\r\n\r\n  hideCover() {\r\n    document.body.removeChild(document.querySelector(\".exitBtn\"));\r\n    document.querySelector(\".root\").style.position = \"\";\r\n  }\r\n\r\n  hideModalWindow() {\r\n    this.props.hideFilmDetailsAction();\r\n  }\r\n\r\n  escapePressHandler(e) {\r\n    if (e.keyCode === 27) {\r\n      this.hideModalWindow();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const imgURL = \"http://image.tmdb.org/t/p/w500\";\r\n    let movie = this.state.movie;\r\n    return (\r\n      <>\r\n        {this.props.searchingFilmLink && (\r\n          <div className=\"modalWindow\">\r\n            <div className=\"coverDiv\"></div>\r\n            <div className=\"upperCoverDiv\">\r\n              <div className=\"MovieWrapper\">\r\n                <img\r\n                  width=\"40%\"\r\n                  alt=\"movie poster\"\r\n                  src={imgURL + movie.poster_path}\r\n                  className=\"movie poster\"\r\n                ></img>\r\n                <div className=\"movieDescription\">\r\n                  <p className=\"exitBtn\" onClick={() => this.hideModalWindow()}>\r\n                    [X]\r\n                  </p>\r\n                  <h2>{movie.title}</h2>\r\n                  <p>{movie.overview}</p>\r\n                  <p>\r\n                    <span className=\"descriptionParam\">IMDB Rating:</span>\r\n                    <span>{movie.vote_average}</span>\r\n                  </p>\r\n                  {movie.genres && (\r\n                    <p>\r\n                      <span className=\"descriptionParam\">Genres:</span>\r\n                      <span>{this.genreConcat()}</span>\r\n                    </p>\r\n                  )}\r\n                  <p>\r\n                    <span className=\"descriptionParam\">Release Date:</span>\r\n                    <span>{movie.release_date}</span>\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"descriptionParam\">Budget:</span>\r\n                    <span>{`$ ${movie.budget / 1000000} m.`}</span>\r\n                  </p>\r\n                  <a\r\n                    className=\"IMDb_button\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={`https://www.imdb.com/title/${movie.imdb_id}/?ref_=nv_sr_1?ref_=nv_sr_1`}\r\n                  >\r\n                    <img src={IMDB} width=\"80px\" alt=\"movie poster\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ searchingFilmLink: state.searchingFilmLink }),\r\n  { hideFilmDetailsAction }\r\n)(ModalMovieContainer);\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class PortalForModalMovieContainer extends Component {\r\n  el = document.createElement(\"div\");\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar/NavBar.jsx\";\nimport SearchBar from \"./components/Main/SearchBar/SearchBar.jsx\";\nimport MoviesContainer from \"./components/Main/MoviesContainer/MoviesContainer.jsx\";\nimport ModalMovieContainer from \"./components/ModalMovieContainer/ModalMovieContainer.jsx\";\nimport PortalForModalMovieContainer from \"./components/ModalMovieContainer/PortalForModal.jsx\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <SearchBar />\n      <MoviesContainer />\n      <PortalForModalMovieContainer>\n        <ModalMovieContainer />\n      </PortalForModalMovieContainer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst configureStore = preloadedState =>\r\n  createStore(rootReducer, preloadedState, composeEnhancers());\r\nconst store = configureStore({});\r\nexport default store;\r\n","const searchValue = (state = \"\", { type, searchingFilmCollectionLink }) => {\r\n  switch (type) {\r\n    case \"SEARCH_FILM_COLLECTION\":\r\n      return searchingFilmCollectionLink;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchValue;\r\n","const searchingFilmLink = (state = \"\", { type, searchingFilmLink }) => {\r\n  switch (type) {\r\n    case \"SEARCH_FILM_DETAILS\":\r\n      return searchingFilmLink;\r\n    case \"HIDE_FILM_DETAILS\":\r\n      return searchingFilmLink;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchingFilmLink;\r\n","import { combineReducers } from \"redux\";\r\nimport searchValue from \"./searchValue\";\r\nimport searchingFilmLink from \"./searchFilmDetails\";\r\n\r\nconst rootReducer = combineReducers({ searchValue, searchingFilmLink });\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}